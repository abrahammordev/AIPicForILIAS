<?php
declare(strict_types=1);
/**
 *  This file is part of the AI Pic Repository Page Component plugin for ILIAS, which allows
 *  users of your platform to add an image component to their pages, generated by an external AI model.
 *  This plugin is created and maintained by SURLABS.
 *
 *  The AI Pic Repository Page Component plugin for ILIAS is open-source and licensed under GPL-3.0.
 *  For license details, visit https://www.gnu.org/licenses/gpl-3.0.en.html.
 *
 *  To report bugs or participate in discussions, visit the Mantis system and filter by
 *  the category "AI Pic" at https://mantis.ilias.de.
 *
 *  More information and source code are available at:
 *  https://github.com/surlabs/AIPicForILIAS
 *
 *  If you need support, please contact the maintainer of this software at:
 *  info@surlabs.com
 *
 */

/**
 * Class ilAIPicPlugin
 * @authors Sergio Santiago, Abraham Morales <info@surlabs.com>
 */

class ilAIPicPlugin extends ilPageComponentPlugin
{
    public const ID = "xaip";
    private static $instance;
    private UploadServiceAIPicGUI $uploader;

    public static function getInstance()
    {
        if (!isset(self::$instance)) {
            global $DIC;

            $component_repository = $DIC["component.repository"];
            $info = $component_repository->getPluginByName("AIPic");
            $component_factory = $DIC["component.factory"];
            $plugin_obj = $component_factory->getPlugin($info->getId());

            self::$instance = $plugin_obj;
        }

        return self::$instance;
    }
    function getComponentType(): string
    {
        return self::ID;
    }


    function getClass(): string
    {
        return "ilAIPicGUI";
    }

    protected function uninstallCustom() : void
    {
        // TODO: Nothing to do here.
    }


    function getPluginName(): string
    {
        return "AIPic";
    }

    public function isValidParentType(string $a_type): bool
    {
        return true;
    }

    public function isValidObjectType($a_type): bool
    {
        return true;
    }

    public function onDelete(array $a_properties, string $a_plugin_version, bool $move_operation = false): void
    {
        if (!$move_operation) {
            $this->uploader = new UploadServiceAIPicGUI();
            if (!empty($a_properties["imageId"])) {
                $this->uploader->removeFromOutside($a_properties["imageId"]);
            }
        }
    }
}